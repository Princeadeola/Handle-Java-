
<Replace with your name>
<Replace with date>
Week4Meet - 10 pts
Turn in on BBL as soon as complete, but before end of day Friday following the lecture.
===============================
Read both programs.
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Random;

/************************************
 * TestPrep.java
 * Runs a little game involving caffeine
 * @author Tammy Pirmann
 * @version 20210414
 ********************************/
public class TestPrep {
  public static void main(String args[]){
    Scanner keyboard = new Scanner(System.in);
    Random randGen = new Random();
    ArrayList<Cafe> drinks = new ArrayList<Cafe>();

    System.out.println("It's time to get ready for midterms!");
    System.out.println("You know you have to be alert for study sessions.");
    System.out.println("Caffeinated beverages from your favorite cafe will work.");
    System.out.println("We all like different drinks, so get ready to enter yours.");
    System.out.println("You will need the name, the mg of caffeine and the price.");
    System.out.println("When you are done, enter DONE then 0 then 0.");

    String name = "na";
    int caffeine;
    double price;

    while (!name.equalsIgnoreCase("DONE")){
      System.out.println("Enter a drink name or DONE: ");
      name = keyboard.next();
      System.out.println("Enter the caffeine in mg: ");
      caffeine = keyboard.nextInt();
      System.out.println("Enter the price: ");
      price = keyboard.nextDouble();
      keyboard.nextLine();
      if (!name.equalsIgnoreCase("DONE")) {
        drinks.add(new Cafe(name, caffeine, price));
      }
    }

    int max = drinks.size();
    System.out.println(max);

    System.out.println("The human body can handle about 500 mg of caffeine before bad
    things start to happen.");
    System.out.println("You will now play chicken with your drink choices. Try to stay
    alert without going over.");
    System.out.println("You can DRINK or be DONE");
    System.out.println("The drink will be chosen at random from the ones you entered");

    int totalCaffeine = 0;
    String tally = "";
    String choice = "DRINK";
    while (!choice.equalsIgnoreCase("DONE")){
      System.out.println("You can DRINK or be DONE!");
      choice = keyboard.nextLine();
      Cafe bev = drinks.get(randGen.nextInt(max));
      totalCaffeine += bev.getCaffeine();
      tally += "["+bev.toString() +"] ";
    }

    if (totalCaffeine > 500){
       System.out.println("You lose! You get the jitters and can't remember anything you
       studied today!");
    }
    else if (totalCaffeine > 100){
       System.out.println("You win! You stay alert for the whole study session!");
    }
    else{
       System.out.println("What's this? It's like you didn't play! You fell
       asleep on your book.");
    }
    System.out.println("You drank: " + tally);

  }
}




/************************
 * Cafe.java
 * Class definition of a caffeinated drink
 * @author Tammy Pirmann
 * @version 20210414
 **************************/
public class Cafe {

private String name;
private int caffeine;
private double price;

public Cafe(){
  name = "Coffee";
  caffeine = 100;
  price = 1.50;
}
public Cafe(String n, int c, double p){
  name = n;
  caffeine = c;
  price = p;
}

public String getName(){
   return name;
}
public int getCaffeine(){
   return caffeine;
}
public double getPrice(){
    return price;
}
public String toString(){
   return (name + ", " + caffeine + "mg of caffeine at $" + price);
}
}

Label these programs with descriptions of what each line or segment is doing. A
segment may be several lines of code or part of one line of code.
Be sure to highlight where the two programs interact with each other.


Everything below this line relates ONLY to the problem discussed in class, the code
we wrote together.
I understand the problem introduced in class to be: (in your own words)

My UML Diagram for these classes: (feel free to paste in a photo of a hand done diagram)

The solution to the problem were the following programs: (provide the names
of the .java files only)

I tested the solution with at least 3 different value sets. The test data and results are:
(use this format: var1 = data, var2 = data, etc -> result)

Reflect on your problem-solving:
How confident are you in the solution?
How ready do you feel for the midterm?
How comfortable are you with Project #1?

Reflect on your learning and your needs. After this class meeting, what topics
do you feel like you learned and what topics do you feel like you need more
information on to learn?

